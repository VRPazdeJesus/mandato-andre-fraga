{"version":3,"file":"mask.directive.d.ts","sources":["mask.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgControl } from '@angular/forms';\r\nimport { MaskService } from './mask.service';\r\nimport { IConfig } from './config';\r\nexport declare class MaskDirective {\r\n    private document;\r\n    private _maskService;\r\n    private _ngControl;\r\n    private _maskValue;\r\n    private _inputValue;\r\n    private _position;\r\n    private _start;\r\n    private _end;\r\n    onTouch: () => void;\r\n    constructor(document: any, _maskService: MaskService, _ngControl: NgControl);\r\n    maskExpression: string;\r\n    specialCharacters: IConfig['specialCharacters'];\r\n    patterns: IConfig['patterns'];\r\n    prefix: IConfig['prefix'];\r\n    sufix: IConfig['sufix'];\r\n    dropSpecialCharacters: IConfig['dropSpecialCharacters'];\r\n    showMaskTyped: IConfig['showMaskTyped'];\r\n    showTemplate: IConfig['showTemplate'];\r\n    clearIfNotMatch: IConfig['clearIfNotMatch'];\r\n    onInput(e: KeyboardEvent): void;\r\n    onBlur(): void;\r\n    onFocus(e: MouseEvent | KeyboardEvent): void;\r\n    onKeyDown(e: KeyboardEvent): void;\r\n    onPaste(): void;\r\n    /** It disables the input element */\r\n    setDisabledState(isDisabled: boolean): void;\r\n    private _repeatPatternSymbols;\r\n    private _initializeMask;\r\n}\r\n"]}